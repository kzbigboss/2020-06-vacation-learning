AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  FinnhubDataStreamName:
    Type: String
    Default: "finnhub-quote-data"
  StockDataPrefix:
    Type: String
    Default: "stockdata/"

Resources:
  IAMRoleProject:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - firehose.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  LambdaRequestCurrentStockData:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt IAMRoleProject.Arn
      CodeUri: request_current_stock_data/
      Handler: app.lambda_handler
      Runtime: python3.7
      Timeout: 60
      Environment:
        Variables:
          requeststockdataqueue: !Ref QueueStockDataRequest

  LambdaGetCurrentStockData:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt IAMRoleProject.Arn
      CodeUri: get_current_stock_data/
      Handler: app.lambda_handler
      Runtime: python3.7
      Timeout: 60
      Environment:
        Variables:
          finnhubdatastream: !Ref FinnhubDataStreamName
          # finnhubapitoken: '{{resolve:secretsmanager:dev/token/finnhub}}'
          # Note: Can't resolve a dynamic reference when testing in
          # PyCharm via AWS Toolkit

  DataStreamStockQuote:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Ref FinnhubDataStreamName
      ShardCount: 1

  DataLakeStorage:
    Type: AWS::S3::Bucket

  DataDeliveryStockQuote:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamType: "KinesisStreamAsSource"
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !GetAtt DataStreamStockQuote.Arn
        RoleARN: !GetAtt IAMRoleProject.Arn
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt DataLakeStorage.Arn
        BufferingHints:
          IntervalInSeconds: 60
        CompressionFormat: GZIP
        RoleARN: !GetAtt IAMRoleProject.Arn
        Prefix: !Ref StockDataPrefix

  QueueStockDataRequest:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60

  TriggerCurrentStockDataRequest:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt QueueStockDataRequest.Arn
      FunctionName: !Ref LambdaGetCurrentStockData

  EventTriggerRequestStockData:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "cron(0/1 * * * ? *)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt LambdaRequestCurrentStockData.Arn
          Id: "LambdaRequestCurrentStockData"

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaRequestCurrentStockData
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt EventTriggerRequestStockData.Arn

  DatabaseVacationAnalytics:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: "vacation-analyitcs"

  TableStokeQuoteLandingRaw:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref DatabaseVacationAnalytics
      TableInput:
        Name: "stock-quote-landing-raw"
        TableType: "EXTERNAL_TABLE"
        StorageDescriptor:
          InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
          OutputFormat: "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"
          SerdeInfo:
            SerializationLibrary: "org.openx.data.jsonserde.JsonSerDe"
          Location:
            !Sub "s3://${DataLakeStorage}/${StockDataPrefix}"
          Columns:
          - Name: symbol
            Type: string
          - Name: t
            Type: string
          - Name: capture_time
            Type: string

Outputs:
  LambdaGetCurrentStockDataAPN:
    Value: !GetAtt LambdaGetCurrentStockData.Arn
  DataStreamAPN:
    Value: !GetAtt DataStreamStockQuote.Arn